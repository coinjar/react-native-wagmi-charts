{"version":3,"sources":["CrosshairTooltip.tsx"],"names":["React","StyleSheet","Animated","useAnimatedStyle","useDerivedValue","useSharedValue","CandlestickChartDimensionsContext","useCandlestickChart","CandlestickChartPriceText","CandlestickChartCrosshairTooltipContext","createContext","position","value","CandlestickChartCrosshairTooltip","children","xGutter","yGutter","tooltipTextProps","textStyle","props","width","height","useContext","currentY","elementHeight","elementWidth","handleLayout","useCallback","event","nativeEvent","layout","topOffset","offset","tooltip","backgroundColor","display","padding","leftTooltip","left","top","opacity","rightTooltip","style","styles","text","create","fontSize"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type { StyleProp, TextStyle, ViewProps } from 'react-native';\nimport { StyleSheet } from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n} from 'react-native-reanimated';\n\nimport { CandlestickChartDimensionsContext } from './Chart';\nimport { useCandlestickChart } from './useCandlestickChart';\nimport {\n  CandlestickChartPriceText,\n  CandlestickChartPriceTextProps,\n} from './PriceText';\n\nexport type CandlestickChartCrosshairTooltipProps = ViewProps & {\n  children?: React.ReactNode;\n  xGutter?: number;\n  yGutter?: number;\n  tooltipTextProps?: CandlestickChartPriceTextProps;\n  textStyle?: Animated.AnimateStyle<StyleProp<TextStyle>>;\n};\n\nexport type CandlestickChartCrosshairTooltipContext = {\n  position: Animated.SharedValue<'left' | 'right'>;\n};\n\nexport const CandlestickChartCrosshairTooltipContext =\n  React.createContext<CandlestickChartCrosshairTooltipContext>({\n    position: { value: 'left' },\n  });\n\nexport function CandlestickChartCrosshairTooltip({\n  children,\n  xGutter = 8,\n  yGutter = 8,\n  tooltipTextProps,\n  textStyle,\n  ...props\n}: CandlestickChartCrosshairTooltipProps) {\n  const { width, height } = React.useContext(CandlestickChartDimensionsContext);\n  const { currentY } = useCandlestickChart();\n  const { position } = React.useContext(\n    CandlestickChartCrosshairTooltipContext\n  );\n\n  const elementHeight = useSharedValue(0);\n  const elementWidth = useSharedValue(0);\n\n  const handleLayout = React.useCallback(\n    (event) => {\n      elementHeight.value = event.nativeEvent.layout.height;\n      elementWidth.value = event.nativeEvent.layout.width;\n    },\n    [elementHeight, elementWidth]\n  );\n\n  const topOffset = useDerivedValue(() => {\n    let offset = 0;\n    if (currentY.value < elementHeight.value / 2 + yGutter) {\n      offset = currentY.value - (elementHeight.value / 2 + yGutter);\n    } else if (currentY.value + elementHeight.value / 2 > height - yGutter) {\n      offset = currentY.value + elementHeight.value / 2 - height + yGutter;\n    }\n\n    return offset;\n  });\n\n  const tooltip = useAnimatedStyle(() => ({\n    backgroundColor: 'white',\n    position: 'absolute',\n    display: 'flex',\n    padding: 4,\n  }));\n  const leftTooltip = useAnimatedStyle(() => ({\n    left: xGutter,\n    top: -(elementHeight.value / 2) - topOffset.value,\n    opacity: position.value === 'left' ? 1 : 0,\n  }));\n  const rightTooltip = useAnimatedStyle(() => ({\n    left: width - elementWidth.value - xGutter,\n    top: -(elementHeight.value / 2) - topOffset.value,\n    opacity: position.value === 'right' ? 1 : 0,\n  }));\n\n  return (\n    <>\n      <Animated.View\n        onLayout={handleLayout}\n        {...props}\n        style={[tooltip, leftTooltip, props.style]}\n      >\n        {children || (\n          <CandlestickChartPriceText\n            {...tooltipTextProps}\n            style={[styles.text, tooltipTextProps?.style, textStyle]}\n          />\n        )}\n      </Animated.View>\n      <Animated.View {...props} style={[tooltip, rightTooltip, props.style]}>\n        {children || (\n          <CandlestickChartPriceText\n            {...tooltipTextProps}\n            style={[styles.text, tooltipTextProps?.style, textStyle]}\n          />\n        )}\n      </Animated.View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 14,\n  },\n});\n"]}