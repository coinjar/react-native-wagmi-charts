{"version":3,"sources":["usePrevious.ts"],"names":["usePrevious","value","ref","React","useRef","useEffect","current"],"mappings":";;;;;;;AAAA;;;;;;AAEO,SAASA,WAAT,CAAwBC,KAAxB,EAAkC;AACvC;AACA;AACA,QAAMC,GAAG,GAAGC,KAAK,CAACC,MAAN,EAAZ,CAHuC,CAIvC;;AACAD,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpBH,IAAAA,GAAG,CAACI,OAAJ,GAAcL,KAAd;AACD,GAFD,EAEG,CAACA,KAAD,CAFH,EALuC,CAO1B;AACb;;AACA,SAAOC,GAAG,CAACI,OAAX;AACD","sourcesContent":["import * as React from 'react';\n\nexport function usePrevious<T>(value: T) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = React.useRef<T>();\n  // Store current value in ref\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n"]}