{"version":3,"sources":["formatPrice.ts"],"names":["formatPrice","value","_value","defaultPrice","_defaultPrice","precision","toString","replace","decimals","Number","Math","min","slice","search","res","toFixed","vals","split","length"],"mappings":";;;;;;;AAAA;AACA;AACA;AACO,SAASA,WAAT,CAAqB;AAC1BC,EAAAA,KAAK,EAAEC,MADmB;AAE1BC,EAAAA,YAAY,EAAEC,aAAa,GAAG,EAFJ;AAG1BC,EAAAA;AAH0B,CAArB,EAQJ;AACD;;AADC;;AAGD,MAAIF,YAAY,GAAGC,aAAnB;;AACA,MAAI,OAAOD,YAAP,KAAwB,QAA5B,EAAsC;AACpCA,IAAAA,YAAY,GAAIA,YAAD,CAAyBG,QAAzB,EAAf;AACD;;AAED,MAAIL,KAAK,GAAGC,MAAM,uBAAIC,YAAJ,4EAAI,eAAcI,OAAlB,0DAAI,2CAAwB,GAAxB,EAA6B,EAA7B,CAAJ,CAAlB;;AACA,MAAI,CAACN,KAAL,EAAY;AACV,WAAQ,MAAR;AACD;;AAED,MAAIO,QAAQ,GACVH,SADU,aACVA,SADU,cACVA,SADU,GAETI,MAAM,CAACR,KAAD,CAAN,GAAgB,CAAhB,GACGS,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYV,KAAK,CAACK,QAAN,GAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,MAA1B,CAAiC,OAAjC,IAA4C,CAAxD,CADH,GAEG,CAJN;AAMA,MAAIC,GAAG,GAAI,GAAEL,MAAM,CAACR,KAAD,CAAN,CAAcc,OAAd,CAAsBP,QAAtB,CAAgC,EAA7C;AACA,QAAMQ,IAAI,GAAGF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAb;;AACA,MAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnBJ,IAAAA,GAAG,GAAGE,IAAI,CAAC,CAAD,CAAJ,CAAQT,OAAR,CAAgB,uBAAhB,EAAyC,GAAzC,CAAN;;AACA,QAAIS,IAAI,CAACE,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAOJ,GAAG,GAAG,GAAN,GAAYE,IAAI,CAAC,CAAD,CAAvB;AACD;AACF;;AACD,SAAOF,GAAP;AACD","sourcesContent":["/**\n * @worklet\n */\nexport function formatPrice({\n  value: _value,\n  defaultPrice: _defaultPrice = '',\n  precision,\n}: {\n  value: string;\n  defaultPrice?: string;\n  precision?: number;\n}) {\n  'worklet';\n\n  let defaultPrice = _defaultPrice;\n  if (typeof defaultPrice === 'number') {\n    defaultPrice = (defaultPrice as number).toString();\n  }\n\n  let value = _value || defaultPrice?.replace?.(',', '');\n  if (!value) {\n    return `0.00`;\n  }\n\n  let decimals =\n    precision ??\n    (Number(value) < 1\n      ? Math.min(8, value.toString().slice(2).search(/[^0]/g) + 3)\n      : 2);\n\n  let res = `${Number(value).toFixed(decimals)}`;\n  const vals = res.split('.');\n  if (vals.length > 0) {\n    res = vals[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    if (vals.length === 2) {\n      return res + '.' + vals[1];\n    }\n  }\n  return res;\n}\n"]}