{"version":3,"sources":["Candles.tsx"],"names":["CandlestickChartCandles","positiveColor","negativeColor","rectProps","lineProps","margin","useAnimations","renderRect","renderLine","candleProps","props","width","height","React","useContext","CandlestickChartDimensionsContext","data","domain","step","map","candle","index"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;AAgBO,SAASA,uBAAT,CAAiC;AACtCC,EAAAA,aADsC;AAEtCC,EAAAA,aAFsC;AAGtCC,EAAAA,SAHsC;AAItCC,EAAAA,SAJsC;AAKtCC,EAAAA,MALsC;AAMtCC,EAAAA,aAAa,GAAG,IANsB;AAOtCC,EAAAA,UAPsC;AAQtCC,EAAAA,UARsC;AAStCC,EAAAA,WATsC;AAUtC,KAAGC;AAVmC,CAAjC,EAW0B;AAC/B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBC,KAAK,CAACC,UAAN,CAAiBC,wCAAjB,CAA1B;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAAyB,+CAA/B,CAF+B,CAI/B;;AAEA,sBACE,oBAAC,mBAAD;AAAK,IAAA,KAAK,EAAEP,KAAZ;AAAmB,IAAA,MAAM,EAAEC;AAA3B,KAAuCF,KAAvC,GACGQ,IAAI,GAAG,CAAP,IACCF,IAAI,CAACG,GAAL,CAAS,CAACC,MAAD,EAASC,KAAT,kBACP,oBAAC,8BAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,MAAM,EAAEJ,MAFV;AAGE,IAAA,MAAM,EAAEZ,MAHV;AAIE,IAAA,SAAS,EAAEO,MAJb;AAKE,IAAA,KAAK,EAAEM,IALT;AAME,IAAA,aAAa,EAAEjB,aANjB;AAOE,IAAA,aAAa,EAAEC,aAPjB;AAQE,IAAA,UAAU,EAAEK,UARd;AASE,IAAA,UAAU,EAAEC,UATd;AAUE,IAAA,SAAS,EAAEL,SAVb;AAWE,IAAA,SAAS,EAAEC,SAXb;AAYE,IAAA,aAAa,EAAEE,aAZjB;AAaE,IAAA,MAAM,EAAEc,MAbV;AAcE,IAAA,KAAK,EAAEC;AAdT,KAeMZ,WAfN,EADF,CAFJ,CADF;AAwBD","sourcesContent":["import * as React from 'react';\nimport { Svg, SvgProps } from 'react-native-svg';\n\nimport { CandlestickChartDimensionsContext } from './Chart';\nimport { CandlestickChartCandle, CandlestickChartCandleProps } from './Candle';\nimport { useCandlestickChart } from './useCandlestickChart';\n\ntype CandlestickChartCandlesProps = SvgProps & {\n  width?: number;\n  height?: number;\n  margin?: CandlestickChartCandleProps['margin'];\n  positiveColor?: CandlestickChartCandleProps['positiveColor'];\n  negativeColor?: CandlestickChartCandleProps['negativeColor'];\n  renderRect?: CandlestickChartCandleProps['renderRect'];\n  renderLine?: CandlestickChartCandleProps['renderLine'];\n  rectProps?: CandlestickChartCandleProps['rectProps'];\n  lineProps?: CandlestickChartCandleProps['lineProps'];\n  candleProps?: Partial<CandlestickChartCandleProps>;\n  useAnimations?: boolean;\n};\n\nexport function CandlestickChartCandles({\n  positiveColor,\n  negativeColor,\n  rectProps,\n  lineProps,\n  margin,\n  useAnimations = true,\n  renderRect,\n  renderLine,\n  candleProps,\n  ...props\n}: CandlestickChartCandlesProps) {\n  const { width, height } = React.useContext(CandlestickChartDimensionsContext);\n  const { data, domain, step } = useCandlestickChart();\n\n  ////////////////////////////////////////////////\n\n  return (\n    <Svg width={width} height={height} {...props}>\n      {step > 0 &&\n        data.map((candle, index) => (\n          <CandlestickChartCandle\n            key={index as React.Key}\n            domain={domain}\n            margin={margin}\n            maxHeight={height}\n            width={step}\n            positiveColor={positiveColor}\n            negativeColor={negativeColor}\n            renderRect={renderRect}\n            renderLine={renderLine}\n            rectProps={rectProps}\n            lineProps={lineProps}\n            useAnimations={useAnimations}\n            candle={candle}\n            index={index}\n            {...candleProps}\n          />\n        ))}\n    </Svg>\n  );\n}\n"]}