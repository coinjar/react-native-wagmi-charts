{"version":3,"sources":["CursorTrustee.tsx"],"names":["LineChartCursorTrustee","displayName","AnimatedSvgLine","Animated","createAnimatedComponent","SVGLine","children","color","horizontalLineColor","verticalLineColor","size","outerSize","crosshairWrapperProps","crosshairProps","crosshairOuterProps","lineVerticalProps","lineHorizontalProps","props","height","width","React","useContext","LineChartDimensionsContext","currentX","currentY","isActive","enableSpringAnimation","setEnableSpringAnimation","useState","Platform","OS","useEffect","setTimeout","animatedCursorStyle","transform","translateX","value","translateY","scale","damping","horizontal","opacity","vertical","vertical2","y1","alignItems","justifyContent","zIndex","style","backgroundColor","borderRadius","position","StyleSheet","absoluteFillObject"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Platform, View, ViewProps, StyleSheet } from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  withSpring,\n} from 'react-native-reanimated';\nimport Svg, { Line as SVGLine, LineProps } from 'react-native-svg';\n\nimport { LineChartCursor, LineChartCursorProps } from './Cursor';\nimport { LineChartDimensionsContext } from './Chart';\nimport { useLineChart } from './useLineChart';\n\ntype LineChartCursorTrusteeProps = Omit<\n  LineChartCursorProps,\n  'children' | 'type'\n> & {\n  children?: React.ReactNode;\n  color?: string;\n  horizontalLineColor?: string;\n  verticalLineColor?: string;\n  size?: number;\n  outerSize?: number;\n  crosshairWrapperProps?: Animated.AnimateProps<ViewProps>;\n  crosshairProps?: ViewProps;\n  crosshairOuterProps?: ViewProps;\n  lineVerticalProps?: Partial<LineProps>;\n  lineHorizontalProps?: Partial<LineProps>;\n};\n\nLineChartCursorTrustee.displayName = 'LineChartCursorTrustee';\n\nconst AnimatedSvgLine = Animated.createAnimatedComponent(SVGLine);\n\nexport function LineChartCursorTrustee({\n  children,\n  color = 'black',\n  horizontalLineColor = 'green',\n  verticalLineColor = 'orange',\n  size = 8,\n  outerSize = 32,\n  crosshairWrapperProps = {},\n  crosshairProps = {},\n  crosshairOuterProps = {},\n  lineVerticalProps = {},\n  lineHorizontalProps = {},\n  ...props\n}: LineChartCursorTrusteeProps) {\n  const { height, width } = React.useContext(LineChartDimensionsContext);\n  const { currentX, currentY, isActive } = useLineChart();\n\n  // It seems that enabling spring animation on initial render on Android causes a crash.\n  const [enableSpringAnimation, setEnableSpringAnimation] = React.useState(\n    Platform.OS === 'ios'\n  );\n  React.useEffect(() => {\n    setTimeout(() => {\n      setEnableSpringAnimation(true);\n    }, 100);\n  }, []);\n\n  const animatedCursorStyle = useAnimatedStyle(() => ({\n    transform: [\n      { translateX: currentX.value - outerSize / 2 },\n      { translateY: currentY.value - outerSize / 2 },\n      {\n        scale: enableSpringAnimation\n          ? withSpring(isActive.value ? 1 : 0, {\n              damping: 10,\n            })\n          : 0,\n      },\n    ],\n  }));\n\n  const horizontal = useAnimatedStyle(() => ({\n    opacity: isActive.value ? 1 : 0,\n    transform: [{ translateY: currentY.value }],\n  }));\n\n  const vertical = useAnimatedStyle(() => ({\n    opacity: isActive.value ? 1 : 0,\n    transform: [{ translateX: currentX.value }],\n  }));\n\n  const vertical2 = useAnimatedStyle(() => ({\n    y1: currentY.value || 0,\n  }));\n\n  return (\n    <LineChartCursor type=\"trustee\" {...props}>\n      <Animated.View\n        {...crosshairWrapperProps}\n        style={[\n          {\n            width: outerSize,\n            height: outerSize,\n            alignItems: 'center',\n            justifyContent: 'center',\n            zIndex: 5,\n          },\n          animatedCursorStyle,\n          crosshairWrapperProps.style,\n        ]}\n      >\n        <View\n          {...crosshairOuterProps}\n          style={[\n            {\n              backgroundColor: color,\n              width: outerSize,\n              height: outerSize,\n              borderRadius: outerSize,\n              opacity: 0.1,\n              position: 'absolute',\n            },\n            crosshairOuterProps.style,\n          ]}\n        />\n        <View\n          {...crosshairProps}\n          style={[\n            {\n              backgroundColor: color,\n              width: size,\n              height: size,\n              borderRadius: size,\n            },\n            crosshairProps.style,\n          ]}\n        />\n      </Animated.View>\n      <Animated.View\n        style={[horizontal, { ...StyleSheet.absoluteFillObject, width: width }]}\n      >\n        <Svg>\n          <SVGLine\n            x1={0}\n            y1={0}\n            x2={width}\n            y2={0}\n            strokeWidth={2}\n            stroke={horizontalLineColor}\n            {...lineHorizontalProps}\n          />\n        </Svg>\n      </Animated.View>\n      <Animated.View style={[vertical, { ...StyleSheet.absoluteFillObject }]}>\n        <Svg>\n          <AnimatedSvgLine\n            x1={0}\n            y1={0}\n            x2={0}\n            y2={height}\n            strokeWidth={2}\n            stroke={verticalLineColor}\n            animatedProps={vertical2}\n            {...lineVerticalProps}\n          />\n        </Svg>\n      </Animated.View>\n      {children}\n    </LineChartCursor>\n  );\n}\n"]}