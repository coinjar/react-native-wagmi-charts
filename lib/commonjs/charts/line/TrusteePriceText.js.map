{"version":3,"sources":["TrusteePriceText.tsx"],"names":["LineChartTrusteePriceText","displayName","format","precision","variant","style","currencySymbol","price"],"mappings":";;;;;;;AAAA;;AAIA;;AAEA;;;;;;AAUAA,yBAAyB,CAACC,WAA1B,GAAwC,2BAAxC;;AAEO,SAASD,yBAAT,CAAmC;AACxCE,EAAAA,MADwC;AAExCC,EAAAA,SAAS,GAAG,CAF4B;AAGxCC,EAAAA,OAAO,GAAG,WAH8B;AAIxCC,EAAAA,KAJwC;AAKxCC,EAAAA;AALwC,CAAnC,EAM4B;AACjC,QAAMC,KAAK,GAAG,iCAAkB;AAAEL,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAoBG,IAAAA;AAApB,GAAlB,CAAd;AACA,sBAAO,oBAAC,0BAAD;AAAc,IAAA,IAAI,EAAEC,KAAK,CAACH,OAAD,CAAzB;AAAoC,IAAA,KAAK,EAAEC;AAA3C,IAAP;AACD","sourcesContent":["import * as React from 'react';\nimport type { TextProps as RNTextProps } from 'react-native';\nimport type Animated from 'react-native-reanimated';\n\nimport { useLineChartPrice } from './usePrice';\nimport type { TFormatterFn } from '../candle/types';\nimport { AnimatedText } from '../../components/AnimatedText';\n\nexport type LineChartTrusteePriceTextProps = {\n  format?: TFormatterFn<string>;\n  precision?: number;\n  variant?: 'formatted' | 'value';\n  style?: Animated.AnimateProps<RNTextProps>['style'];\n  currencySymbol?: string;\n};\n\nLineChartTrusteePriceText.displayName = 'LineChartTrusteePriceText';\n\nexport function LineChartTrusteePriceText({\n  format,\n  precision = 2,\n  variant = 'formatted',\n  style,\n  currencySymbol\n}: LineChartTrusteePriceTextProps) {\n  const price = useLineChartPrice({ format, precision,currencySymbol });\n  return <AnimatedText text={price[variant]} style={style} />;\n}\n"]}