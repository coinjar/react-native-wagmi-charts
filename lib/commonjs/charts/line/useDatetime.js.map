{"version":3,"sources":["useDatetime.ts"],"names":["useLineChartDatetime","format","locale","options","currentIndex","data","timestamp","value","timestampString","toString","formatted","formattedDatetime"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAEO,SAASA,oBAAT,CAA8B;AACnCC,EAAAA,MADmC;AAEnCC,EAAAA,MAFmC;AAGnCC,EAAAA;AAHmC,IAQjC,EARG,EAQC;AACN,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAyB,iCAA/B;AAEA,QAAMC,SAAS,GAAG,4CAAgB,MAAM;AACtC,QAAI,OAAOF,YAAY,CAACG,KAApB,KAA8B,WAA9B,IAA6CH,YAAY,CAACG,KAAb,KAAuB,CAAC,CAAzE,EACE,OAAO,EAAP;AACF,WAAOF,IAAI,CAACD,YAAY,CAACG,KAAd,CAAJ,CAAyBD,SAAhC;AACD,GAJiB,CAAlB;AAMA,QAAME,eAAe,GAAG,4CAAgB,MAAM;AAC5C,QAAIF,SAAS,CAACC,KAAV,KAAoB,EAAxB,EAA4B,OAAO,EAAP;AAC5B,WAAOD,SAAS,CAACC,KAAV,CAAgBE,QAAhB,EAAP;AACD,GAHuB,CAAxB;AAKA,QAAMC,SAAS,GAAG,4CAAgB,MAAM;AACtC,UAAMC,iBAAiB,GAAGL,SAAS,CAACC,KAAV,GACtB,2BAAe;AACbA,MAAAA,KAAK,EAAED,SAAS,CAACC,KADJ;AAEbL,MAAAA,MAFa;AAGbC,MAAAA;AAHa,KAAf,CADsB,GAMtB,EANJ;AAOA,WAAOF,MAAM,GACTA,MAAM,CAAC;AAAEM,MAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,IAAmB,CAAC,CAA7B;AAAgCG,MAAAA,SAAS,EAAEC;AAA3C,KAAD,CADG,GAETA,iBAFJ;AAGD,GAXiB,CAAlB;AAaA,SAAO;AAAEJ,IAAAA,KAAK,EAAEC,eAAT;AAA0BE,IAAAA;AAA1B,GAAP;AACD","sourcesContent":["import { useDerivedValue } from 'react-native-reanimated';\n\nimport { formatDatetime } from '../../utils';\nimport type { TFormatterFn } from '../candle/types';\nimport { useLineChart } from './useLineChart';\n\nexport function useLineChartDatetime({\n  format,\n  locale,\n  options,\n}: {\n  format?: TFormatterFn<number>;\n  locale?: string;\n  options?: Intl.DateTimeFormatOptions;\n} = {}) {\n  const { currentIndex, data } = useLineChart();\n\n  const timestamp = useDerivedValue(() => {\n    if (typeof currentIndex.value === 'undefined' || currentIndex.value === -1)\n      return '';\n    return data[currentIndex.value].timestamp;\n  });\n\n  const timestampString = useDerivedValue(() => {\n    if (timestamp.value === '') return '';\n    return timestamp.value.toString();\n  });\n\n  const formatted = useDerivedValue(() => {\n    const formattedDatetime = timestamp.value\n      ? formatDatetime({\n          value: timestamp.value,\n          locale,\n          options,\n        })\n      : '';\n    return format\n      ? format({ value: timestamp.value || -1, formatted: formattedDatetime })\n      : formattedDatetime;\n  });\n\n  return { value: timestampString, formatted };\n}\n"]}