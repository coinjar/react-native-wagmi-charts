{"version":3,"sources":["useCurrentY.ts"],"names":["useCurrentY","path","width","LineChartDimensionsContext","currentX","LineChartContext","parsedPath","undefined","currentY","boundedX","Math","min","value"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEO,SAASA,WAAT,GAAuB;AAC5B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkB,uBAAWC,iCAAX,CAAxB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAe,uBAAWC,yBAAX,CAArB;AACA,QAAMC,UAAU,GAAG,oBAAQ,MAAOL,IAAI,GAAG,8BAAMA,IAAN,CAAH,GAAiBM,SAApC,EAAgD,CAACN,IAAD,CAAhD,CAAnB;AAEA,QAAMO,QAAQ,GAAG,4CAAgB,MAAM;AACrC,QAAI,CAACF,UAAL,EAAiB;AACf,aAAO,CAAC,CAAR;AACD;;AACD,UAAMG,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAAST,KAAT,EAAgBE,QAAQ,CAACQ,KAAzB,CAAjB;AACA,WAAO,iCAASN,UAAT,EAAqBG,QAArB,KAAkC,CAAzC;AACD,GANgB,CAAjB;AAQA,SAAOD,QAAP;AACD","sourcesContent":["import { useContext, useMemo } from 'react';\nimport { useDerivedValue } from 'react-native-reanimated';\nimport { getYForX, parse } from 'react-native-redash';\nimport { LineChartContext } from './Context';\nimport { LineChartDimensionsContext } from './Chart';\n\nexport function useCurrentY() {\n  const { path, width } = useContext(LineChartDimensionsContext);\n  const { currentX } = useContext(LineChartContext);\n  const parsedPath = useMemo(() => (path ? parse(path) : undefined), [path]);\n\n  const currentY = useDerivedValue(() => {\n    if (!parsedPath) {\n      return -1;\n    }\n    const boundedX = Math.min(width, currentX.value);\n    return getYForX(parsedPath, boundedX) || 0;\n  });\n\n  return currentY;\n}\n"]}