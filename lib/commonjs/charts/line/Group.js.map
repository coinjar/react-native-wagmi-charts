{"version":3,"sources":["Group.tsx"],"names":["LineChartGroup","children","props","flatChildren","flatChildrenCount","Children","count","map","child","index","isLast","type","LineChart","absolute"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AAEA;;;;;;;;AAMO,SAASA,cAAT,CAAwB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAxB,EAAuD;AAC5D,QAAMC,YAAY,GAAG,wCAAgBF,QAAhB,CAArB;;AACA,QAAMG,iBAAiB,GAAGC,gBAASC,KAAT,CAAeH,YAAf,CAA1B;;AACA,sBACE,6BAAC,iBAAD,EAAUD,KAAV,EAEGG,gBAASE,GAAT,CAAaJ,YAAb,EAA2B,CAACK,KAAD,EAAaC,KAAb,KAAuB;AACjD,UAAMC,MAAM,GAAGD,KAAK,KAAKL,iBAAiB,GAAG,CAA7C;;AACA,QAAI,CAACM,MAAD,IAAWF,KAAK,CAACG,IAAN,KAAeC,gBAA9B,EAAyC;AACvC,0BAAO,yBAAaJ,KAAb,EAAoB;AACzBK,QAAAA,QAAQ,EAAE;AADe,OAApB,CAAP;AAGD;;AACD,WAAOL,KAAP;AACD,GARA,CAFH,CADF;AAcD","sourcesContent":["import React from 'react';\nimport { ReactNode, Children, cloneElement } from 'react';\nimport { ViewProps, View } from 'react-native';\nimport flattenChildren from 'react-keyed-flatten-children';\n\nimport { LineChart } from './Chart';\n\ntype Props = {\n  children: ReactNode;\n} & ViewProps;\n\nexport function LineChartGroup({ children, ...props }: Props) {\n  const flatChildren = flattenChildren(children);\n  const flatChildrenCount = Children.count(flatChildren);\n  return (\n    <View {...props}>\n      {/* eslint-disable-next-line @typescript-eslint/no-explicit-any */}\n      {Children.map(flatChildren, (child: any, index) => {\n        const isLast = index === flatChildrenCount - 1;\n        if (!isLast && child.type === LineChart) {\n          return cloneElement(child, {\n            absolute: true,\n          });\n        }\n        return child;\n      })}\n    </View>\n  );\n}\n"]}